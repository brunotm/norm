linters:
  enable:
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    - dupl
    - errcheck
    #    - exhaustive
    - funlen
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - revive
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - misspell
    - nakedret
    - noctx
    - nolintlint
      #    - rowserrcheck
    - staticcheck
    - structcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
  disable:
    # Those below have a high rate of false positives
    - lll
    - scopelint
    # - gomnd
    # - whitespace
    # - deadcode
    # - unused
issues:
  exclude:
    - S1010 # tail index usage when slicing, which is needed to avoid allocations

linters-settings:
  dupl:
    threshold: 200
  funlen:
    lines: 150
    statements: 80
  gci:
    local-prefixes: gitlab.com/unbabel/infoz
  goconst:
    min-len: 4
    min-occurrences: 5
  gocritic:
    settings:
      hugeParam:
        # size in bytes that makes the warning trigger (default 80)
        sizeThreshold: 100
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
      - sloppyReassign
      - unslice
      - importShadow
      - typeDefFirst
  gocyclo:
    min-complexity: 30
  golint:
    min-confidence: 0
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: [argument,case,condition,return]
  govet:
    check-shadowing: false
  lll:
    line-length: 150
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
